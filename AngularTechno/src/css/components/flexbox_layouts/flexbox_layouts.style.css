.real-header {
    color: red;
    padding: 20px;
    font-size: 20px;
}

[id^="example-"] {
    border-width: 1px;
    border-style: solid;
    padding: 5px;
    margin: 5px;
}

/* --------------- Базовые стили на самостоятельной странице. */

/* 
 * свойства box-sizing:
 * 
 *      :root {
 *          box-sizing: border-box;
 *      }
 * 
 *      *, ::before, ::after {
 *          box-sizing: inherit;
 *      }
 *
 * фон и шрифт:
 *
 *      body {
 *          background-color: #709b90;
 *          font-family: Helvetica, Arial, sans-serif;
 *      }
 * 
 * глобальные поля:
 * 
 *      body *+* {
 *          margin-top: 1.5em;
 *      }
 * 
 * двойной контейнер для центрирования контента:
 * 
 *      .container {
 *          max-width: 1080px;
 *          margin: 0 auto;
 *      }
 */

/* --------------- Базовые стили. */

/* свойства box-sizing */

.body {
    box-sizing: border-box;
}

.body *, .body ::before, .body ::after {
    box-sizing: inherit;
}

/* фон и шрифт */

.body {
    background-color: #92c3b7;
    font-family: Helvetica, Arial, sans-serif;
}

/* глобальные поля */

.body *+* {
    margin-top: 1.5em;
}

/* двойной контейнер для центрирования контента */

.body .container {
    max-width: 1080px;
    margin: 0 auto;
}

/* --------------- Базовая flex-навигация. */

/* настройка списка site-nav (flex-контейнер) */

#example-1 .site-nav {
    /* задать flex-контейнер, потомки которого становятся flex-элементами */
    display: flex;
    /* переопределить используемые по умолчанию браузерные стили списков */
    padding-left: 0;
    background-color: rgb(117, 175, 175);
    list-style-type: none;
}

/* переопределение глобальной настройки полей */

#example-1 .site-nav>li {
    margin-top: 0;
}

/* 
 * комбинатор прямых потомков (>) - нацеливание на элементы являющиеся прямыми потомками 
 * настройка элементов списка (flex-элементы)
 */

#example-1 .site-nav>li>a {
    background-color: rgb(38, 0, 255);
    color: rgb(255, 255, 255);
    /* Убирает подчеркивания у ссылок, добавленных браузерной таблицей стилей */
    text-decoration: none;
}

/* --------------- Отступы панели навигации. */

#example-1 .site-nav {
    padding: .5em;
    border-radius: .2em;
}

#example-1 .site-nav>li>a {
    /* 
     * блочный вид ссылок, чтобы они увеличивали высоту родительских элементов 
     * если бы ссылки оставались строчными, то высота элементов была бы равна высоте строки, а
     *      не высоте их контенту с отступами, эта высота добавляется к родительскому элементу
     */
    display: block;
    /* добавление отступа внутри ссылок */
    padding: .5em 1em;
}

/* --------------- Поля между элементами. */

#example-1 .site-nav>li+li :not([class='.nav-right']) {
    /* 
     * для всех элементов списка кроме первого 
     * отступы панели навигации будут применены не к элемента 'li', а к внутренним элементам 'а'
     * горизонтальный отступ выглядит более эстетично если он больше вертикального
     */
    margin-left: 1.5em;
}

#example-1 .site-nav>.nav-right {
    /* автоматические поля внутри flex-блока заполнят всё доступное пространство */
    margin-left: auto;
    /* justify-content */
}

/* --------------- Применение flexbox-верстки к основному контейнеру. */

#example-1 .tile {
    /* добавление цвета фона и отступов */
    padding: 1.5em;
    background-color: #fff;
}

#example-1 .flex {
    /* применение flex-разметки к основному контейнеру */
    display: flex;
}

#example-1 .flex>*+* {
    /* удаление верхнего поля и создание промежутка между flex-элементами */
    margin-top: 0;
    margin-left: 1.5em;
}

/* --------------- Свойство flex. */

/*
 * РЕКОМЕНДАЦИЯ:
 * следует использовать краткое свойство flex:
 *      'flex: flex-grow flex-shrink flex-basis'
 */

#example-1 .column-main {
    /*
     * flex управляет размером (шириной) flex-элементов вдоль главной оси
     * устанавливаем ширину колонки в 2/3
     * эквивалентно 'flex-grow: 2'
     */
    flex: 2;
}

#example-1 .column-sidebar {
    /* 
     * эквивалентное задание свойств без сокращения flex
     * устанавливаем ширину колонки в 1/3 
     */
    flex-grow: 1;
    /* значения по умолчанию */
    flex-shrink: 1;
    flex-basis: 0%;
}

/* --------------- Свойства flex-basis и flex-shrink. */

/* 
 * задать ширину колонок через свойство flex-basis и сжатие колонок через свойство flex-shrink
 * колонки занимают 100% плюс поля в 1.5em, что вызывает сжатие колонок на основе flex-shrink
 */

#example-1 .column-66 {
    /* эквивалентно свойству 'flex: 1 1 66.67%' */
    flex: 0 1 66.67%;
}

#example-1 .column-33 {
    /* эквивалентно свойству 'flex: 1 1 33.33%' */
    flex: 0 10 33.33%;
}

#example-1 .column-3 {
    flex: 0 3 100%;
}

#example-1 .column-7 {
    flex: 0 7 100%;
}

/* --------------- Flex-колонка справа. */

/* 
 * боковая панель становится flex-контейнером, чтобы колонки могли заполнить высоту контейнера,
 * 'flex-direction: column' позволяет разместить flex-элементы вертикально
 */

#example-1 .column-sidebar {
    /* flex для внешнего flex-блока */
    flex: 1;
    /* flex-контейнер для внутреннего */
    display: flex;
    /* 
     * главная ось повернута и направлена сверху вниз, а поперечная ось идет слева направо 
     * свойство 'flex: 1' приведет к увеличению высоты элементов до заполнения контейнера
     */
    flex-direction: column;
}

#example-1 .column-sidebar>.tile {
    /* flex-grow для элементов внутри flex-контейнер */
    flex: 1;
}

/* --------------- Стилизация формы авторизации. */

#example-1 .login-form h3 {
    margin: 0;
    font-size: .9em;
    font-weight: bold;
    /* выравнивания текста по правому краю */
    text-align: right;
    /* смена регистра букв на прописные */
    text-transform: uppercase;
}

/* 
 * 'черный список' - подход аналогичен добавлению в черный список
 *      селектор input:not([type=checkbox]):not([type=radio]) выбирает все элементы ввода, 
 *      за исключением флажков и переключателей
 * 'белый список' - подход аналогичен перечислению допустимых элементов
 */

#example-1 .login-form input:not([type=checkbox]):not([type=radio]) {
    /* cтилевое форматирование всех полей ввода текста */
    display: block;
    margin-top: 0;
    /* 
     * блочные элементы автоматически заполняют всю ширину, но это не влияет на ширину input
     * ширина элементов input определяется атрибутом size, который указывает количество символов
     * вмещаемых полем ввода без прокрутки, поэтому чтобы расширить элемент используется width
     */
    width: 100%;
}

#example-1 .login-form button {
    /* стилевое форматирование кнопки */
    margin-top: 1em;
    border: 1px solid #cc6b5a;
    background-color: white;
    padding: .5em 1em;
    /* изменить внешний вид указателя мыши */
    cursor: pointer;
}

/* --------------- Стилизация текста. */

#example-1 .centered {
    text-align: center;
}

#example-1 .cost {
    display: flex;
    /* центрирование flex-элементов по главной и поперечной осям */
    justify-content: center;
    align-items: center;
    line-height: .7;
}

#example-1 .cost>span {
    /* переопределение глобальных полей */
    margin-top: 0;
}

/* Установка разных размеров шрифта для каждой части ценника */

#example-1 .cost-currency {
    font-size: 2rem;
}

#example-1 .cost-roubles {
    font-size: 4rem;
}

#example-1 .cost-kopecks {
    font-size: 1.5rem;
    /* выравнивание элемента по верхнему краю вместо центра */
    align-self: flex-start;
}

#example-1 .cta-button {
    display: block;
    background-color: #cc6b5a;
    color: white;
    padding: .5em 1em;
    text-decoration: none;
}