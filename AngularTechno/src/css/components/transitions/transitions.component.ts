import { Component } from "@angular/core";

declare function transitionsEventListeners(): any;

@Component({
    selector: "transitions-component",
    templateUrl: "./transitions.template.html",
    styleUrls: ["./transitions.style.css"],
})
export class TransitionsComponent {
    ngOnInit() {
        transitionsEventListeners();
    }
}

// --------------- переходы

// - переходы привлекают внимание пользователя к изменениям на странице, тем самым улучшая интерактивность страницы,
//      переходы выполняются при изменении свойств элемента при этом значение свойства будет изменяться плавно,
//      изменения могут происходить, например, через псевдокласс ':hover' или изменение css-классов через JavaScript

// - переходы применяются к элементам с помощью свойств transition:
//      transition-property             свойтсво к которому будет применен переход, all - переход выполняется для всех 
//          изменяющихся свойств, можно указать несколько свойств через запятую
//      transition-duration             продолжительность перехода, в секундах (0.1s) или миллисекундах (100ms)
//      transitiontiming-function       функция времени, контролирует ускорение и замедление изменений во время перехода
//      transition-delay                задержка перехода, ожидание до начала перехода

// - краткая форма содержит четыре разных свойства: 
//      transition-property, transition-duration, transitiontiming-function, transition-delay

// - свойства перехода указываются в селекторе элемента:
// 
//      .dropdown {                                           
//          background-color: white;                            свойство в нормальном состоянии
//          transition: background-color 0.2s linear;           настройка перехода из нормального состояния в измененное
// 
// - настройка перехода для нескольких свойств:
//          transition:                                         
//              border-radius 0.1s linear, 
//              background-color 0.1s linear;
// 
// - настройка перехода для нескольких свойств:
//          transition-property:            border-radius,      background-color;
//          transition-duration:            0.1s,               0.1s;
//          transition-timing-function:     linear,             linear;
//      }                                                     
//      .dropdown:hover {                                     
//          background-color: hsl(280, 15%, 95%);               свойство в измененнном состоянии
//      }                                                     

// --------------- функции времени

// - функция времени контролирует, как происходит изменение значения свойства во времени: 
//      linear      линейно
//      ease-in     вначале медленно с ускорением в конце
//      ease-out    вначале быстро с замедлением в конце
//      easein-out  эффект отскока, ускорение и последующее замедление

// РЕКОМЕНДАЦИЯ:
// - следует использовать один и тот же набор кривых для однотипного дизайна
// - сценарии применения: 
//      linear      изменение цвета и эффекты усиления/ослабления
//      ease-in     системные оповещения, например, завершение загрузки файла, 
//                  анимация привлечет внимание, а затем движение ускорится и завершится
//      ease-out    действия пользователя, например, нажатие кнопки или наведение указателя,  
//                  интерфейс быстро реагирует на действия пользователя и медленно затихает

// --------------- cubic-bezier.com

//      https://css-tricks.com/clever-uses-step-easing/

// функция времени в браузере задается как кривая Безье, которая определяет, как значение меняется во времени, 
//      значения передаваемые в функцию задают координаты точек манипуляторов
//      cubic-bezier(0.45, 0.05, 0.55, 0.95)

// --------------- функция steps

// функция steps задает переход как последовательность мгновенных перемещений, принимает два параметра:
//      'количество переходов'      количество шагов
//      'момент изменения'          когда происходит изменение: start - в начале шага, end - в конце шага

// --------------- неанимируемые свойства

//      https://developer.mozilla.org/ru/docs/Web/CSS/background-color

// некоторые css-свойства нельзя анимировать, например, display позволяет переключаться между значениями none и block
//      могут быть анимированы свойства, принимающие значения длины, количества, цвета или функцию calc()
//      свойства требующие ключевых слов не могут быть анимированны
