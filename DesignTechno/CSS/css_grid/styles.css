.real-header {
    color: red;
    padding: 20px;
    font-size: 20px;
}

[id^="example-"] {
    border-width: 1px;
    border-style: solid;
    padding: 5px;
    margin: 5px;
    --bg-color: darkgray;
}

/* --------------- Базовые стили на самостоятельной странице. */

/* 
 * свойства box-sizing:
 * 
 *      :root {
 *          box-sizing: border-box;
 *      }
 * 
 *      *, ::before, ::after {
 *          box-sizing: inherit;
 *      }
 *
 * фон и шрифт:
 *
 *      body {
 *          background-color: #709b90;
 *          font-family: Helvetica, Arial, sans-serif;
 *      }
 * 
 * глобальные поля:
 * 
 *      body *+* {
 *          margin-top: 1.5em;
 *      }
 * 
 * двойной контейнер для центрирования контента:
 * 
 *      .container {
 *          max-width: 1080px;
 *          margin: 0 auto;
 *      }
 */

/* --------------- Базовые стили. */

/* свойства box-sizing */

.body {
    box-sizing: border-box;
}

.body *, .body ::before, .body ::after {
    box-sizing: inherit;
}

/* фон и шрифт */

.body {
    background-color: #92c3b7;
    font-family: Helvetica, Arial, sans-serif;
}

/* глобальные поля */

.body *+* {
    margin-top: 1.5em;
}

/* двойной контейнер для центрирования контента */

.body .container {
    max-width: 1080px;
    margin: 0 auto;
}

/* --------------- Базовая сетка. */

/* 
 * - 'display: grid' определяет контейнер сетки, который заполняет 100% доступной 
 *      ширины
 * - 'display: inline-grid' определяет строчный контейнер сетки, ширина которого 
 *      будет не больше чем необходимо, чтобы уместить его потомков
 * - единица fr представляет размер колонки или строки в долях, применять единицы 
 *      fr для каждой колонки или строки не обязательно
 */

#example-1 .grid {
    /* элемент становится контейнером сетки */
    display: grid;
    /* определяются три колонки одинаковой ширины */
    grid-template-columns: 200px 1fr 1fr;
    /* определяются две строки одинаковой высоты */
    grid-template-rows: 1fr 1fr;
    /* устанавливает горизонтальные и вертикальные зазоры между всеми ячейками сетки */
    grid-gap: 0.5em 1em;
}

#example-1 .grid>* {
    background-color: var(--bg-color);
    color: white;
    padding: 2em;
    border-radius: 0.5em;
}


#example-1 .grid div {
    outline: 3px dashed #f90;
    font-size: 30px;
    color: #333;
}

/* базовая сетка */

#example-2 .grid {
    grid-gap: 10px;
    background-color: #e4e4e4;
    /* устанавливает контейнер как сетку */
    display: grid;
    /* устанавливает две строки высотой по 100px */
    grid-template-rows: 100px 100px;
    /* устанавливает два столбца шириной по 200px */
    grid-template-columns: 200px 200px;
}

/*
 * свойства grid-row и grid-column указывают строку и столбец, 
 *      в которые следует поместить элемент
 */

#example-2 .grid .grid-item-3 {
    grid-row: 1;
    grid-column: 1;
}

#example-2 .grid .grid-item-2 {
    grid-row: 1;
    grid-column: 2;
}

#example-2 .grid .grid-item-1 {
    grid-row: 2;
    grid-column: 1;
}

#example-2 .grid .grid-item-4 {
    grid-row: 2;
    grid-column: 2;
}

#example-2 .grid [class^='grid-item'] {
    outline: 3px dashed #f90;
    font-size: 30px;
    color: #333;
}

/* выравнивание */

#example-3 .grid {
    grid-gap: 10px;
    background-color: #e4e4e4;
    display: inline-grid;
    grid-template-rows: 100px 100px;
    grid-template-columns: 200px 200px;
    /* выровнять элементы сетки по центру */
    align-items: center;
    justify-content: center;
}

#example-3 .grid .grid-item-1 {
    grid-row: 1;
    grid-column: 1;
}

#example-3 .grid .grid-item-2 {
    grid-row: 1;
    grid-column: 2;
}

#example-3 .grid .grid-item-3 {
    grid-row: 2;
    grid-column: 1;
}

#example-3 .grid .grid-item-4 {
    grid-row: 2;
    grid-column: 2;
}

#example-3 .grid [class^='grid-item'] {
    outline: 3px dashed #f90;
    font-size: 30px;
    color: #333;
    /*
     * - ширина сетки должна быть равна ширине ее содержимого
     * - содержимое элементов сетки выровнено по центру, для этого
     *      сами элементы можно сделать Flexbox или Grid
     */
    display: grid;
    align-items: center;
    justify-content: center;
}

/* позиционирование элементов */

#example-4 .grid {
    display: inline-grid;
    grid-gap: 10px;
    /* 
     * дополнительные элементы, помещаемые в сетку, получат 
     *      размер 200px на 200px
     */
    grid-template-rows: 100px 100px;
    grid-template-columns: 200px 200px;
    /* 
     * можно управлять обработкой неявных элементов: сначала высота 
     *      будет составлять 100px, затем 150px и далее повторяется
     */
    grid-auto-rows: 100px 150px;
    grid-auto-columns: 100px 150px;
    grid-auto-flow: column;
    background-color: #e4e4e4;
}

#example-4 .grid .grid-item-1 {
    grid-row: 1;
    grid-column: 1;
}

#example-4 .grid .grid-item-2 {
    grid-row: 1;
    grid-column: 2;
}

#example-4 .grid .grid-item-3 {
    grid-row: 2;
    grid-column: 1;
}

#example-4 .grid .grid-item-4 {
    grid-row: 2;
    grid-column: 2;
}

#example-4 .grid [class^='grid-item'] {
    display: grid;
    align-items: center;
    justify-content: center;
    outline: 3px dashed #f90;
    font-size: 30px;
    color: #333;
}

/* --------------- Базовая сетка. */

#example-5 .container {
    display: grid;
    /* 
     * определяются две вертикальные полосы сетки 
     * именование вертикальных линий сетки
     */
    grid-template-columns: [left-start] 2fr [left-end right-start] 1fr [right-end];
    /* 
     * - определяются четыре горизонтальные полосы сетки, размер задается 
     *      автоматически repeat определяет несколько полос сетки сразу, 
     *      эквивалент: 'grid-template-rows: auto auto auto auto'
     *      repeat последовательности: 
     *          repeat (3, 2fr 1fr)         =>      2fr 1fr 2fr 1fr 2fr 1fr
     *          1fr repeat(3, 3fr) 1fr      =>      1fr 3fr 3fr 3fr 1fr
     * - именование горизонтальных линий сетки, всех кроме последней
     *          repeat(3, [col] lfr lfr)    =>      grid-column: col 2 / span 2
     */
    grid-template-rows: repeat(4, [row] auto);
    grid-gap: 1.5em;
    max-width: 1080px;
    margin: 0 auto;
}

#example-5 header, #example-5 nav {
    background-color: var(--bg-color);
    /* занимает промежуток между вертикальными линиями сетки 1 и 3 */
    grid-column: 1 / 3;
    /* 
     * занимает промежуток, совпадающий с одной горизонтальной полосой сетки 
     * span сообщает браузеру, что элемент будет занимать одну полосу сетки
     */
    grid-row: span 1;
}

/* 
 * помещает другие элементы сетки между различными линиями сетки 
 * grid-column это сокращение: grid-column-start / grid-column-end
 * grid-row это сокращение: grid-row-start / grid-row-end
 * символ '/' необходим только для разделения значений, а пробелы необязательны
 */

#example-5 .main {
    background-color: var(--bg-color);
    /* альтернативный вариант разметки: от линии 'left-start' до линии 'left-end' */
    grid-column: left;
    /* альтернативный вариант разметки: третья строка в две полосы сетки */
    grid-row: row 3 / span 2;
}

#example-5 .sidebar-top {
    background-color: var(--bg-color);
    /* вторая колонка - между линиями сетки 2 и 3 */
    grid-column: 2 / 3;
    /* третья и четвертая строки - между линиями сетки 3 и 4 */
    grid-row: 3 / 4;
}

#example-5 .sidebar-bottom {
    background-color: var(--bg-color);
    /* вторая колонка - между линиями сетки 2 и 3 */
    grid-column: 2 / 3;
    /* четвертая и пятая строки - между линиями сетки 4 и 5 */
    grid-row: 4 / 5;
}

/* прочее */

#example-5 .tile {
    background-color: var(--bg-color);
    padding: 1.5em;
}

#example-5 .tile> :first-child {
    margin-top: 0;
}

#example-5 .tile *+* {
    margin-top: 1.5em;
}

/* --------------- Полная стилизация страницы. */

/* загловок */

#example-5 .page-heading {
    margin: 0;
}

/* панель навигации */

#example-5 .site-nav {
    display: flex;
    margin: 0;
    padding: .5em;
    background-color: #5f4b44;
    list-style-type: none;
    border-radius: .2em;
}

#example-5 .site-nav>li {
    margin-top: 0;
}

#example-5 .site-nav>li>a {
    display: block;
    padding: .5em 1em;
    background-color: #cc6b5a;
    color: white;
    text-decoration: none;
}

#example-5 .site-nav>li+li :not([class='.nav-right']) {
    margin-left: 1.5em;
}

#example-5 .site-nav>.nav-right {
    margin-left: auto;
}

/* форма авторизации */

#example-5 .login-form h3 {
    margin: 0;
    font-size: .9em;
    font-weight: bold;
    text-align: right;
    text-transform: uppercase;
}

#example-5 .login-form input:not([type=checkbox]):not([type=radio]) {
    display: block;
    margin-top: 0;
    width: 100%;
}

#example-5 .login-form button {
    margin-top: 1em;
    border: 1px solid #cc6b5a;
    background-color: white;
    padding: .5em 1em;
    cursor: pointer;
}

/* стилизация текста */

#example-5 .centered {
    text-align: center;
}

#example-5 .cost {
    display: flex;
    justify-content: center;
    align-items: center;
    line-height: .7;
}

#example-5 .container .cost>span {
    margin-top: 0;
}

#example-5 .cost-currency {
    font-size: 2rem;
}

#example-5 .cost-dollars {
    font-size: 4rem;
}

#example-5 .cost-cents {
    font-size: 1.5rem;
    align-self: flex-start;
}

#example-5 .cta-button {
    display: block;
    background-color: #cc6b5a;
    color: white;
    padding: .5em 1em;
    text-decoration: none;
}

/* --------------- Именованные области. */

/*
 * именованная область должна быть прямоугольной, более сложные формы не допустимы (L/U)
 * ячейку можно оставить пустой, если задать '.' как имя
 *      grid-template-areas:    "top    top     right"
 *                              "left   .       right"
 *                              "left   bottom  bottom";
 */

#example-6 .container {
    display: grid;
    /* задание именованных областей */
    grid-template-areas: "title title""nav nav""main aside1""main aside2";
    /* определение размеров полос сетки */
    grid-template-columns: 2fr 1fr;
    grid-template-rows: repeat(4, auto);
    grid-gap: 1.5em;
}

#example-6 .tile {
    border: 1px solid;
    background-color: var(--bg-color);
    text-align: center;
}

/* помещение каждого элемента в именованную область */

#example-6 header {
    grid-area: title;
}

#example-6 nav {
    grid-area: nav;
}

#example-6 .main {
    grid-area: main;
}

#example-6 .sidebar-top {
    grid-area: aside1;
}

#example-6 .sidebar-bottom {
    grid-area: aside2;
}

/*  */

#example-7 .grid [class^='grid-item'] {
    margin-top: 0px;
}

#example-7 .grid {
    display: inline-grid;
    grid-gap: 10px;
    /* 
     * Первая линия столбцов называется left-start. Вторая линия 
     * называется left-end и center-start, поскольку она расположена 
     * между двумя столбцами. 
     */
    grid-template-columns:
        [left-start] 200px [left-end center-start] 200px [center-end right-start] 200px [right-end];
    grid-template-rows:
        [top-start] 200px [top-end middle-start] 200px [middle-end bottom-start] 200px [bottom-end];
    background-color: #e4e4e4;
}

#example-7 .grid [class^='grid-item'] {
    display: grid;
    align-items: center;
    justify-content: center;
    outline: 3px dashed #f90;
    font-size: 30px;
    color: #333;
}

#example-7 .grid .grid-item-1 {
    grid-area: middle / center;
}

#example-7 .grid .grid-item-2 {
    grid-area: bottom / right;
}

#example-7 .grid .grid-item-3 {
    grid-area: top / left;
}

#example-7 .grid .grid-item-4 {
    grid-column: right-start / right-end;
    grid-row: top-start / top-end;
}

#example-7 .grid .grid-items-5 {
    grid-column: left-start / middle-start;
    grid-row: middle-end / bottom-end;
}

#example-7 .grid .grid-item-6 {
    grid-column: right-start / right-end;
    grid-row: middle-start / middle-end;
}

#example-7 .grid .grid-item-7 {
    grid-column: center-start / center-end;
    grid-row: middle-end / bottom-end;
}

#example-7 .grid .grid-item-8 {
    grid-column: left-start / left-end;
    grid-row: top-end / bottom-start;
}

#example-7 .grid .grid-item-9 {
    grid-column: center-start / center-end;
    grid-row: top-start / top-end;
}

/**/

#example-8 .grid [class^='grid-item'] {
    margin-top: 0px;
}

#example-8 .grid {
    display: inline-grid;
    grid-gap: 10px;
    grid-template-columns: 200px 200px 200px;
    grid-template-rows: 200px 200px 200px;
    background-color: #e4e4e4;
    /*  */
    grid-template-areas:
        'one two three'
        'four five six'
        'seven eight nine';
}

#example-8 .grid [class^='grid-item'] {
    display: grid;
    align-items: center;
    justify-content: center;
    outline: 3px dashed #f90;
    font-size: 30px;
    color: #333;
}

#example-8 .grid .grid-item-1 {
    grid-area: five;
}

#example-8 .grid .grid-item-2 {
    grid-area: nine;
}

#example-8 .grid .grid-item-3 {
    grid-area: one;
}

#example-8 .grid .grid-item-4 {
    grid-area: three;
}

#example-8 .grid .grid-items-5 {
    grid-area: seven;
}

#example-8 .grid .grid-item-6 {
    grid-area: six;
}

#example-8 .grid .grid-item-7 {
    grid-area: eight;
}

#example-8 .grid .grid-item-8 {
    grid-area: four;
}

#example-8 .grid .grid-item-9 {
    grid-area: two;
}

/* --------------- Неявная сетка. */

#example-9 .portfolio {
    display: grid;
    /* 
     * - автоматическое заполнение сетки, auto-fill гарантирует что будет создано 
     *      столько колонок сколько поместится в доступное пространство без нарушения 
     *      установленных ограничений размера 
     * - минимальная ширина колонки 200px, minmax гарантирует что ширина всех полос 
     *      будет не менее 200px и не более 1fr
     * - использование auto-fit вместо auto-fill уберет пустые полосы при недостатке 
     *      элементов, а не пустые расширит заполнив доступное пространство 
     */
    grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));
    /* высоты неявной горизонтальной полосы */
    grid-auto-rows: 1fr;
    grid-gap: 1em;
    /* алгоритм плотного размещения элементов, эквивалентно 'grid-auto-flow: row dense' */
    grid-auto-flow: dense;
}

/* 
 * flexbox-верстка используется для полного заполнения ячеек сетки использование
 *      вертикального flex-контейнера для растягивания изображения 
 */

#example-9 .portfolio>figure {
    margin: 0;
    /* элементы с изображениями становятся вертикальными flex-контейнерами */
    display: flex;
    flex-direction: column;
}

#example-9 .portfolio img {
    /* width: 100%; */
    max-width: 100%;
    /* 
     * flex-grow равен 1, чтобы изображение заполнило все доступное пространство 
     *      flex-контейнера 
     */
    flex: 1;
    /* изображение заполняет блок без растягивания */
    object-fit: cover;
}

#example-9 .portfolio figcaption {
    padding: 0.3em 0.8em;
    background-color: rgba(0, 0, 0, 0.5);
    color: #fff;
    text-align: right;
}

#example-9 .portfolio .featured {
    /* увеличение изображений в два раза */
    grid-row: span 2;
    /* 
     * не задается размещение элементов в конкретных полосах, элемент будет размещен 
     *      автоматически с помощью алгоритма размещения элементов, элементы будут 
     *      заполнять собой первое свободное пространство
     * третья строка в две полосы сетки:
     *      'grid-row: 3 / span 2'      
     */
    grid-column: span 2;
}

/* базовая сетка */

#example-10 .grid [class^='grid-item'] {
    margin-top: 0px;
}

#example-10 .grid {
    font-size: 28px;
    font-family: sans-serif;
    display: grid;
    grid-gap: 30px;
    background-color: #ddd;
    grid-template-columns: repeat(4, 1fr);
    grid-auto-rows: 100px;
    grid-auto-flow: row dense;
}

#example-10 [class^='grid-item'] {
    outline: 1px #f90 dashed;
    display: grid;
    background-color: goldenrod;
    align-items: center;
    justify-content: center;
}

#example-10 .grid-item-3 {
    grid-column: 2/-1;
}

#example-10 .grid-item-6 {
    grid-row: 3/6;
    grid-column: 3 / 5;
}

#example-10 .grid-item-17 {
    grid-row: 6 / span 2;
    grid-column: 2/3;
}

#example-10 .grid-item-4 {
    grid-row: 4 / 7;
}